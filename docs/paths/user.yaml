/register:
    post:
      summary: Register a new user
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: strongpassword123
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: user registered successfully
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: user@example.com
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        400:
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User already exists
        401:
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid token
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

/login:
    post:
      summary: User login
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: strongpassword123
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: user@example.com
                      role:
                        type: string
                        example: user
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        401:
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

/me:
    get:
      summary: Get current logged-in user profile
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        200:
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    format: email
                    example: user@example.com
                  role:
                    type: string
                    example: user
                  phone:
                    type: string
                    example: "+1234567890"
                  address:
                    type: string
                    example: "123 Main St, City, Country"
                  profileImage:
                    type: string
                    format: uri
                    example: "https://example.com/images/profile.jpg"
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        401:
          description: Unauthorized - Authentication required
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

    put:
      summary: Update current logged-in user profile
      tags: [User]
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Jane Doe
                phone:
                  type: string
                  example: "+1234567890"
                address:
                  type: string
                  example: "456 Another St, City, Country"
                profileImage:
                  type: string
                  format: binary
                  description: Profile image file upload
      responses:
        200:
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile updated successfully
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Jane Doe
                      email:
                        type: string
                        format: email
                        example: user@example.com
                      role:
                        type: string
                        example: user
                      phone:
                        type: string
                        example: "+1234567890"
                      address:
                        type: string
                        example: "456 Another St, City, Country"
                      profileImage:
                        type: string
                        format: uri
                        example: "/uploads/profiles/profilepic.jpg"
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        401:
          description: Unauthorized - Authentication required
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

    delete:
      summary: Delete current logged-in user account
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        200:
          description: User account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Your account has been deleted
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        401:
          description: Unauthorized - Authentication required
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

/{id}:
    delete:
      summary: Delete user by ID (admin only)
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the user to delete
      responses:
        200:
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: user deleted successfully
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: user not found
        401:
          description: Unauthorized - Authentication required
        403:
          description: Forbidden - Admins only
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

    get:
      summary: Get user by ID (admin only)
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the user to retrieve
      responses:
        200:
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: user not found
        401:
          description: Unauthorized - Authentication required
        403:
          description: Forbidden - Admins only
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error

/:
    get:
      summary: Get paginated list of users (admin only)
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of users per page
      responses:
        200:
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                    example: 100
                  totalPages:
                    type: integer
                    example: 10
                  currentPage:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        401:
          description: Unauthorized - Authentication required
        403:
          description: Forbidden - Admins only
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
